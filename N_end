package LinkedLIst;
import java.util.*;
public class N_end {
	class Node
	{
		int data;
		Node next;
		Node(int data)
		{
			this.data=data;
			next=null;
		}
	}
	Node head;
	void insert(int new_data)
	{
		Node new_node=new Node(new_data);
		new_node.next=head;
		head=new_node;
		
	}
	void search(int n)
	{
		int len = 0; 
        Node temp = head; 
  
        // 1) count the number of nodes in Linked List 
        while (temp != null) { 
            temp = temp.next; 
            len++; 
        } 
  
        // check if value of n is not more than length of 
        // the linked list 
        if (len < n) 
            return; 
  
        temp = head; 
  
        // 2) get the (len-n+1)th node from the beginning 
        for (int i = 1; i < len - n + 1; i++) 
            temp = temp.next; 
  
        System.out.println(temp.data); 
    } 
  

	
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		LinkedList l=new LinkedList();
		N_end k=new N_end();
		System.out.println("Enterr number of nodes");
		int x=sc.nextInt();
		
		for(int i=0;i<x;i++)
		{
			k.insert(sc.nextInt());
		}
		System.out.println("enter position to delete element from last");
		int position=sc.nextInt();
		k.search(position);
	}

}
